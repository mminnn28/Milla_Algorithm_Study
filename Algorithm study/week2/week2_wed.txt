import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
<<<<<<< HEAD
    private static int[][] board = new int[5][5];
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        // 빙고판
        for (int i = 0; i < 5; i++) {
            st = new StringTokenizer(br.readLine());
            for (int j = 0; j < 5; j++) 
                board[i][j] = Integer.parseInt(st.nextToken());
        }

        //사회자
        for (int i = 0; i < 5; i++) {
            st = new StringTokenizer(br.readLine());
            for (int j = 0; j < 5; j++) {
                int n = Integer.parseInt(st.nextToken());
                find(n);
                if (checkBingo()) {
                    System.out.printf("%d", i * 5 + j + 1);
                    return;
                }
            }
        }
        
    }

    public static void find (int n) {
         for (int i = 0; i < 5; i++) 
            for (int j = 0; j < 5; j++) 
                if (board[i][j] == n) {
                    board[i][j] = 0;
                    return;
                }
    }

    public static boolean checkBingo() {
        int bingo = 0;
        for (int i = 0; i < 5; i++) 
            if (board[i][0] == 0
                 && board[i][1] == 0
                 && board[i][2] == 0
                 && board[i][3] == 0
                 && board[i][4] == 0
                ) bingo++;
        //세로 빙고
        for (int i = 0; i < 5; i++) 
            if (board[0][i] == 0
                 && board[1][i] == 0
                 && board[2][i] == 0
                 && board[3][i] == 0
                 && board[4][i] == 0
                ) bingo++;
        
        //대각선
        if (board[0][0] == 0
           && board[1][1] == 0
            && board[2][2] == 0
            && board[3][3] == 0
            && board[4][4] == 0
           ) bingo++;

        if (board[0][4] == 0
           && board[1][3] == 0
            && board[2][2] == 0
            && board[3][1] == 0
            && board[4][0] == 0
           ) bingo++;
        
        if (bingo >= 3) return true;
        return false;
=======
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int cash = Integer.parseInt(br.readLine());
        int[] stockPrice = new int[14];
        StringTokenizer st = new StringTokenizer(br.readLine());
        for (int i = 0; i < 14; i++) 
            stockPrice[i] = Integer.parseInt(st.nextToken());
        
        int jun_cash = cash;
        int jun_stock = 0;
         for (int i = 0; i < 14; i++) {
             if (jun_cash / stockPrice[i] > 0) {
                 jun_stock += jun_cash / stockPrice[i];
                 jun_cash %= stockPrice[i];
             }
         }

        int sung_cash = cash;
        int sung_stock = 0;
        for (int i = 3; i < 14; i++) {
            if (stockPrice[i-3] - stockPrice[i-2] > 0 
                  && stockPrice[i-2] - stockPrice[i-1] > 0
                  && stockPrice[i-1] - stockPrice[i] > 0)  { //하락
                    sung_stock += sung_cash / stockPrice[i];
                    sung_cash %= stockPrice[i];
                  }
             else if  (stockPrice[i-3] - stockPrice[i-2] < 0 
                  && stockPrice[i-2] - stockPrice[i-1] < 0
                  && stockPrice[i-1] - stockPrice[i] < 0) { // 상승
                     sung_cash += stockPrice[i] * sung_stock;
                     sung_stock = 0;
                  }
             
         }

        int bnp = jun_cash + jun_stock * stockPrice[13];
        int timing = sung_cash + sung_stock * stockPrice[13];

        if (bnp > timing) System.out.printf("BNP");
        else if (bnp < timing) System.out.printf("TIMING");
        else System.out.printf("SAMESAME");
>>>>>>> e821b7d5f0d42fef487705af3e6d1a5609bb596e
    }
}